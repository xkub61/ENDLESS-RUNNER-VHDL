library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity controladora_jogo is
	port(
		ctrl_CLK : in std_logic;
		ctrl_FINISH : in std_logic;
		ctrl_START : in std_logic;
		ctrl_Q0_MOEDA : in std_logic;
		ctrl_Q1_MOEDA : in std_logic;
		ctrl_Q0_OBST : in std_logic;
		ctrl_Q1_OBST : in std_logic;
		ctrl_PLAYER_POS : in std_logic;
		ctrl_PLAYER : in std_logic;
		ctrl_FRAME_TIMER : in std_logic;
		ctrl_CNT_MOEDA : in std_logic;
		ctrl_RMV_MOEDA : out std_logic;
		ctrl_RMV_OBST : out std_logic;
		ctrl_SET_PLAYER : out std_logic;
		ctrl_CLR_PLAYER : out std_logic;
		ctrl_CLR_TIMER : out std_logic;
		ctrl_CLR_START : out std_logic;
		ctrl_RENDER : out std_logic;
		ctrl_CMD : out std_logic_vector(2 downto 0)
		
		);
end controladora_jogo;

architecture arch of controladora_jogo is
	type estado is (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,
						 s10,s11,s12,s13,s14,s15,s16,s17,s18);
	signal estado_atual,prox_estado : estado := s0;
begin;
	sequencial:
	process(ctrl_CLK) is
	begin
		if rising_edge(ctrl_CLK) then
			estado_atual <= prox_estado;
		end if
	end process;
	
	logico:
	process(ctrl_CLK,ctrl_FINISH,ctrl_START) is
	begin
		case estado_atual is
			when s0 => 
				ctrl_RMV_MOEDA <= '0';
				ctrl_RMV_OBST <= '0';
				ctrl_SET_PLAYER <= '0';
				ctrl_CLR_PLAYER <= '0';
				ctrl_CLR_TIMER <= '0';
				ctrl_CLR_START <= '0';
				ctrl_RENDER <= '0';
				ctrl_CMD <= "000";
				
				if ctrl_FINISH = '1' then
					prox_estado <= s1;
				else 
					prox_estado <= s0;
				end if;
			
			when s1 => 
				ctrl_RMV_MOEDA <= '0';
				ctrl_RMV_OBST <= '0';
				ctrl_SET_PLAYER <= '0';
				ctrl_CLR_PLAYER <= '0';
				ctrl_CLR_TIMER <= '0'
				ctrl_CLR_START <= '0';
				ctrl_RENDER <= '1';
				ctrl_CMD <= "100";
				
				if ctrl_START = '1' then
					prox_estado <= s2;
				else 
					prox_estado <= s1;
				end if;
			
			when s2 => 
				ctrl_RMV_MOEDA <= '0';
				ctrl_RMV_OBST <= '0';
				ctrl_SET_PLAYER <= '0';
				ctrl_CLR_PLAYER <= '1';
				ctrl_CLR_TIMER <= '1'
				ctrl_CLR_START <= '1';
				ctrl_RENDER <= '0';
				ctrl_CMD <= "000";
			
				prox_estado <= s3;
				
			when s3 => 
				ctrl_RMV_MOEDA <= '0';
				ctrl_RMV_OBST <= '0';
				ctrl_SET_PLAYER <= '0';
				ctrl_CLR_PLAYER <= '0';
				ctrl_CLR_TIMER <= '0'
				ctrl_CLR_START <= '0';
				ctrl_RENDER <= '0';
				ctrl_CMD <= "000";
				
				if ctrl_Q0_MOEDA = '1' then
					prox_estado <= s4;
				else 
					prox_estado <= s8;
				end if;
			
			when s4 => 
				ctrl_RMV_MOEDA <= '0';
				ctrl_RMV_OBST <= '0';
				ctrl_SET_PLAYER <= '0';
				ctrl_CLR_PLAYER <= '0';
				ctrl_CLR_TIMER <= '0'
				ctrl_CLR_START <= '0';
				ctrl_RENDER <= '0';
				ctrl_CMD <= "000";
				
				if ctrl_Q1_MOEDA = ctrl_PLAYER_POS then
					prox_estado <= s5
				else 
					prox_estado <= s8;
				end if;
			
			when s5 => 
				ctrl_RMV_MOEDA <= '0';
				ctrl_RMV_OBST <= '0';
				ctrl_SET_PLAYER <= '0';
				ctrl_CLR_PLAYER <= '0';
				ctrl_CLR_TIMER <= '0'
				ctrl_CLR_START <= '0';
				ctrl_RENDER <= '0';
				ctrl_CMD <= "000";
				
				if ctrl_PLAYER = '1' then
					prox_estado <= s7;
				else 
					prox_estado <= s6;
				end if;
		
		end case;
	end process;
	
end arch;